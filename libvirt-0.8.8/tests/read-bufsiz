#!/bin/sh
# ensure that reading a file larger than BUFSIZ works

# Copyright (C) 2008, 2010 Red Hat, Inc.

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

test -z "$srcdir" && srcdir=`pwd`
test -z "$abs_top_srcdir" && abs_top_srcdir=`pwd`/..
test -z "$abs_top_builddir" && abs_top_builddir=`pwd`/..

if test "$VERBOSE" = yes; then
  set -x
  $abs_top_builddir/tools/virsh --version
fi

. "$srcdir/test-lib.sh"

fail=0

# Output a valid definition, to be used as input.
$abs_top_builddir/tools/virsh -c test:///default dumpxml 1 > xml.t || fail=1

# Change the VM name
sed -e "s|<name>test</name>|<name>newtest</name>|g" xml.t > xml

for i in before after; do
  # The largest BUFSIZ I've seen is 128K.  This is slightly larger.
  printf %132000s ' ' > sp || fail=1
  in=in-$i
  # Append or prepend enough spaces to push the size over the limit:
  ( test $i = before && cat sp xml || cat xml sp ) > $in || fail=1

  $abs_top_builddir/tools/virsh --connect test:///default define $in > out || fail=1
  printf "Domain newtest defined from $in\n\n" > exp || fail=1
  compare exp out || fail=1
done

(exit $fail); exit $fail
