# WARNING: generated from the following:
# libvirt_public.syms libvirt_private.syms libvirt_bridge.syms libvirt_linux.syms libvirt_macvtap.syms libvirt_daemon.syms libvirt_nwfilter.syms libvirt_vmx.syms

#
# Officially exported symbols, for which header
# file definitions are installed in /usr/include/libvirt
# either from libvirt.h and virterror.h
#
# Versions here are *fixed* to match the libvirt version
# at which the symbol was introduced. This ensures that
# a new client app requiring symbol foo() can't accidentally
# run with old libvirt.so not providing foo() - the global
# soname version info can't enforce this since we never
# change the soname
#
LIBVIRT_0.0.3 {
    global:
	virConnectClose;
	virConnectGetType;
	virConnectGetVersion;
	virConnectListDomains;
	virConnectNumOfDomains;
	virConnectOpen;
	virConnectOpenReadOnly;

	virDomainCreateLinux;
	virDomainDestroy;
	virDomainFree;
	virDomainGetID;
	virDomainGetInfo;
	virDomainGetMaxMemory;
	virDomainGetName;
	virDomainGetOSType;
	virDomainGetXMLDesc;
	virDomainLookupByID;
	virDomainLookupByName;
	virDomainRestore;
	virDomainResume;
	virDomainSave;
	virDomainSetMaxMemory;
	virDomainShutdown;
	virDomainSuspend;

	virGetVersion;
};

LIBVIRT_0.0.5 {
    global:
	virDomainLookupByUUID;
	virDomainGetUUID;
} LIBVIRT_0.0.3;

LIBVIRT_0.1.0 {
    global:
	virInitialize;
	virNodeGetInfo;
	virDomainReboot;

	virCopyLastError;
	virConnSetErrorFunc;
	virResetLastError;
	virResetError;
	virConnGetLastError;
	virGetLastError;
	virSetErrorFunc;
	virConnCopyLastError;
	virConnResetLastError;
	virDefaultErrorFunc;
} LIBVIRT_0.0.5;

LIBVIRT_0.1.1 {
    global:
	virDomainLookupByUUIDString;
	virDomainGetUUIDString;
	virDomainSetMemory;
	virDomainDefineXML;
	virDomainCreate;
	virDomainUndefine;
	virConnectListDefinedDomains;
} LIBVIRT_0.1.0;

LIBVIRT_0.1.4 {
    global:
	virDomainSetVcpus;
	virDomainPinVcpu;
	virDomainGetVcpus;
} LIBVIRT_0.1.1;

LIBVIRT_0.1.5 {
    global:
	virConnectNumOfDefinedDomains;
} LIBVIRT_0.1.4;

LIBVIRT_0.1.9 {
    global:
	virDomainCoreDump;
	virDomainAttachDevice;
	virDomainDetachDevice;
} LIBVIRT_0.1.5;

LIBVIRT_0.2.0 {
    global:
	virConnectNumOfNetworks;
	virConnectListNetworks;
	virConnectNumOfDefinedNetworks;
	virConnectListDefinedNetworks;
	virNetworkLookupByName;
	virNetworkLookupByUUID;
	virNetworkLookupByUUIDString;
	virNetworkCreateXML;
	virNetworkDefineXML;
	virNetworkUndefine;
	virNetworkCreate;
	virNetworkDestroy;
	virNetworkFree;
	virNetworkGetName;
	virNetworkGetUUID;
	virNetworkGetUUIDString;
	virNetworkGetXMLDesc;
	virNetworkGetBridgeName;
} LIBVIRT_0.1.9;

LIBVIRT_0.2.1 {
    global:
	virConnectGetCapabilities;
	virConnectGetMaxVcpus;
	virDomainGetMaxVcpus;
	virDomainGetAutostart;
	virDomainSetAutostart;
	virNetworkGetAutostart;
	virNetworkSetAutostart;
} LIBVIRT_0.2.0;

LIBVIRT_0.2.3 {
    global:
	virDomainGetSchedulerType;
	virDomainGetSchedulerParameters;
	virDomainSetSchedulerParameters;
} LIBVIRT_0.2.1;

LIBVIRT_0.3.0 {
    global:
	virConnectGetHostname;
	virConnectGetURI;
	virDomainGetConnect;
	virNetworkGetConnect;
} LIBVIRT_0.2.3;

LIBVIRT_0.3.2 {
    global:
	virDomainMigrate;
	virDomainBlockStats;
	virDomainInterfaceStats;
} LIBVIRT_0.3.0;

LIBVIRT_0.3.3 {
    global:
	virNodeGetCellsFreeMemory;
	virNodeGetFreeMemory;
} LIBVIRT_0.3.2;

LIBVIRT_0.4.0 {
    global:
	virConnectOpenAuth;
	virConnectAuthPtrDefault;
} LIBVIRT_0.3.3;

LIBVIRT_0.4.1 {
    global:
	virStoragePoolGetConnect;
	virConnectNumOfStoragePools;
	virConnectNumOfDefinedStoragePools;
	virConnectListStoragePools;
	virConnectListDefinedStoragePools;
	virStoragePoolLookupByName;
	virStoragePoolLookupByUUID;
	virStoragePoolLookupByUUIDString;
	virStoragePoolLookupByVolume;
	virStoragePoolCreateXML;
	virStoragePoolDefineXML;
	virStoragePoolUndefine;
	virStoragePoolCreate;
	virStoragePoolBuild;
	virStoragePoolDestroy;
	virStoragePoolDelete;
	virStoragePoolRefresh;
	virStoragePoolFree;
	virStoragePoolGetName;
	virStoragePoolGetUUID;
	virStoragePoolGetUUIDString;
	virStoragePoolGetInfo;
	virStoragePoolGetXMLDesc;
	virStoragePoolSetAutostart;
	virStoragePoolGetAutostart;
	virStoragePoolNumOfVolumes;
	virStoragePoolListVolumes;

	virStorageVolGetConnect;
	virStorageVolLookupByName;
	virStorageVolLookupByKey;
	virStorageVolLookupByPath;
	virStorageVolCreateXML;
	virStorageVolDelete;
	virStorageVolFree;
	virStorageVolGetName;
	virStorageVolGetKey;
	virStorageVolGetInfo;
	virStorageVolGetXMLDesc;
	virStorageVolGetPath;
} LIBVIRT_0.4.0;

LIBVIRT_0.4.2 {
    global:
	virDomainBlockPeek;
	virDomainMemoryPeek;
} LIBVIRT_0.4.1;

LIBVIRT_0.4.5 {
    global:
	virConnectFindStoragePoolSources;
} LIBVIRT_0.4.2;

LIBVIRT_0.5.0 {
    global:
	virDomainCreateXML;
	virEventRegisterImpl;
	virConnectDomainEventRegister;
	virConnectDomainEventDeregister;

	virNodeNumOfDevices;
	virNodeListDevices;
	virNodeDeviceLookupByName;
	virNodeDeviceFree;
	virNodeDeviceGetXMLDesc;
	virNodeDeviceGetName;
	virNodeDeviceGetParent;
	virNodeDeviceNumOfCaps;
	virNodeDeviceListCaps;

} LIBVIRT_0.4.5;

LIBVIRT_0.6.0 {
    global:
	virConnectRef;
	virDomainRef;
	virNetworkRef;
	virStoragePoolRef;
	virStorageVolRef;
	virNodeDeviceRef;

} LIBVIRT_0.5.0;

LIBVIRT_0.6.1 {
    global:
	virFreeError;
	virSaveLastError;
	virNodeDeviceDettach;
	virNodeDeviceReAttach;
	virNodeDeviceReset;
	virDomainGetSecurityLabel;
	virNodeGetSecurityModel;
} LIBVIRT_0.6.0;

LIBVIRT_0.6.3 {
    global:
	virNodeDeviceCreateXML;
	virNodeDeviceDestroy;
} LIBVIRT_0.6.1;

LIBVIRT_0.6.4 {
    global:
	virInterfaceGetConnect;
	virConnectNumOfInterfaces;
	virConnectListInterfaces;
	virInterfaceLookupByName;
	virInterfaceLookupByMACString;
	virInterfaceGetName;
	virInterfaceGetMACString;
	virInterfaceGetXMLDesc;
	virInterfaceRef;
	virInterfaceFree;
	virInterfaceDefineXML;
	virInterfaceUndefine;
	virInterfaceCreate;
	virInterfaceDestroy;
	virStorageVolCreateXMLFrom;
	virConnectDomainXMLFromNative;
	virConnectDomainXMLToNative;
} LIBVIRT_0.6.3;

LIBVIRT_0.7.0 {
    global:
	virConnectNumOfDefinedInterfaces;
	virConnectListDefinedInterfaces;
} LIBVIRT_0.6.4;

LIBVIRT_0.7.1 {
    global:
        virSecretGetConnect;
        virConnectNumOfSecrets;
        virConnectListSecrets;
        virSecretLookupByUUID;
        virSecretLookupByUUIDString;
        virSecretLookupByUsage;
        virSecretDefineXML;
        virSecretGetUUID;
        virSecretGetUUIDString;
        virSecretGetUsageType;
        virSecretGetUsageID;
        virSecretGetXMLDesc;
        virSecretSetValue;
        virSecretGetValue;
        virSecretUndefine;
        virSecretRef;
        virSecretFree;
} LIBVIRT_0.7.0;

LIBVIRT_0.7.2 {
    global:
	virStreamNew;
	virStreamRef;
	virStreamSend;
	virStreamRecv;
	virStreamSendAll;
	virStreamRecvAll;
	virStreamEventAddCallback;
	virStreamEventUpdateCallback;
	virStreamEventRemoveCallback;
	virStreamFinish;
	virStreamAbort;
	virStreamFree;
	virDomainMigrateToURI;
} LIBVIRT_0.7.1;

LIBVIRT_0.7.3 {
    global:
	virConnectGetLibVersion;
	virConnectIsEncrypted;
	virConnectIsSecure;
	virDomainIsActive;
	virDomainIsPersistent;
	virNetworkIsActive;
	virNetworkIsPersistent;
	virStoragePoolIsActive;
	virStoragePoolIsPersistent;
	virInterfaceIsActive;
} LIBVIRT_0.7.2;

LIBVIRT_0.7.5 {
    global:
        virConnectCompareCPU;
        virDomainMemoryStats;
} LIBVIRT_0.7.3;

LIBVIRT_0.7.7 {
    global:
        virDomainAttachDeviceFlags;
        virDomainDetachDeviceFlags;
        virConnectBaselineCPU;
        virDomainGetJobInfo;
	virDomainAbortJob;
} LIBVIRT_0.7.5;

LIBVIRT_0.8.0 {
    global:
	virStorageVolWipe;
        virDomainMigrateSetMaxDowntime;
        virConnectDomainEventRegisterAny;
        virConnectDomainEventDeregisterAny;
        virDomainUpdateDeviceFlags;
	virConnectListNWFilters;
	virConnectNumOfNWFilters;
	virNWFilterLookupByName;
	virNWFilterLookupByUUID;
	virNWFilterLookupByUUIDString;
	virNWFilterFree;
	virNWFilterGetName;
	virNWFilterGetUUID;
	virNWFilterGetUUIDString;
	virNWFilterGetXMLDesc;
	virNWFilterRef;
	virNWFilterDefineXML;
	virNWFilterUndefine;
	virDomainManagedSave;
	virDomainHasManagedSaveImage;
	virDomainManagedSaveRemove;
        virDomainSnapshotCreateXML;
        virDomainSnapshotGetXMLDesc;
        virDomainSnapshotNum;
        virDomainSnapshotListNames;
        virDomainSnapshotLookupByName;
        virDomainHasCurrentSnapshot;
        virDomainSnapshotCurrent;
        virDomainRevertToSnapshot;
        virDomainSnapshotDelete;
        virDomainSnapshotFree;
} LIBVIRT_0.7.7;


LIBVIRT_0.8.1 {
    global:
        virDomainGetBlockInfo;
} LIBVIRT_0.8.0;


LIBVIRT_0.8.2 {
    global:
        virDomainCreateWithFlags;
} LIBVIRT_0.8.1;

LIBVIRT_0.8.5 {
    global:
        virDomainSetMemoryParameters;
        virDomainGetMemoryParameters;
        virDomainGetVcpusFlags;
        virDomainSetVcpusFlags;
} LIBVIRT_0.8.2;

LIBVIRT_0.8.6 {
    global:
        virDomainOpenConsole;
        virDomainIsUpdated;
} LIBVIRT_0.8.5;

LIBVIRT_0.8.8 {
    global:
        virConnectGetSysinfo;
} LIBVIRT_0.8.6;

# .... define new API here using predicted next version number ....


# Private symbols

LIBVIRT_PRIVATE_0.8.8 {

global:

#
# General private symbols. Add symbols here, and see Makefile.am for
# more details.
#
# Keep this file sorted by header name, then by symbols with each header.
#

# authhelper.h
virRequestPassword;
virRequestUsername;


# bitmap.h
virBitmapAlloc;
virBitmapClearBit;
virBitmapFree;
virBitmapGetBit;
virBitmapSetBit;


# buf.h
virBufferAdd;
virBufferAddChar;
virBufferContentAndReset;
virBufferError;
virBufferEscapeSexpr;
virBufferEscapeString;
virBufferFreeAndReset;
virBufferStrcat;
virBufferURIEncodeString;
virBufferUse;
virBufferVSprintf;


# caps.h
virCapabilitiesAddGuest;
virCapabilitiesAddGuestDomain;
virCapabilitiesAddGuestFeature;
virCapabilitiesAddHostFeature;
virCapabilitiesAddHostMigrateTransport;
virCapabilitiesAddHostNUMACell;
virCapabilitiesAllocMachines;
virCapabilitiesDefaultGuestArch;
virCapabilitiesDefaultGuestEmulator;
virCapabilitiesDefaultGuestMachine;
virCapabilitiesFormatXML;
virCapabilitiesFree;
virCapabilitiesFreeMachines;
virCapabilitiesFreeNUMAInfo;
virCapabilitiesGenerateMac;
virCapabilitiesIsEmulatorRequired;
virCapabilitiesNew;
virCapabilitiesSetEmulatorRequired;
virCapabilitiesSetHostCPU;
virCapabilitiesSetMacPrefix;


# cgroup.h
virCgroupAddTask;
virCgroupAllowDeviceMajor;
virCgroupAllowDevicePath;
virCgroupControllerTypeFromString;
virCgroupControllerTypeToString;
virCgroupDenyAllDevices;
virCgroupDenyDevicePath;
virCgroupForDomain;
virCgroupForDriver;
virCgroupFree;
virCgroupGetBlkioWeight;
virCgroupGetCpuShares;
virCgroupGetCpuacctUsage;
virCgroupGetFreezerState;
virCgroupGetMemoryHardLimit;
virCgroupGetMemorySoftLimit;
virCgroupGetMemoryUsage;
virCgroupGetSwapHardLimit;
virCgroupMounted;
virCgroupRemove;
virCgroupSetBlkioWeight;
virCgroupSetCpuShares;
virCgroupSetFreezerState;
virCgroupSetMemory;
virCgroupSetMemoryHardLimit;
virCgroupSetMemorySoftLimit;
virCgroupSetSwapHardLimit;


# command.h
virCommandAddArg;
virCommandAddArgBuffer;
virCommandAddArgFormat;
virCommandAddArgList;
virCommandAddArgPair;
virCommandAddArgSet;
virCommandAddEnvBuffer;
virCommandAddEnvPair;
virCommandAddEnvPass;
virCommandAddEnvPassCommon;
virCommandAddEnvString;
virCommandClearCaps;
virCommandDaemonize;
virCommandFree;
virCommandNew;
virCommandNewArgList;
virCommandNewArgs;
virCommandNonblockingFDs;
virCommandPreserveFD;
virCommandRun;
virCommandRunAsync;
virCommandSetErrorBuffer;
virCommandSetErrorFD;
virCommandSetInputBuffer;
virCommandSetInputFD;
virCommandSetOutputBuffer;
virCommandSetOutputFD;
virCommandSetPidFile;
virCommandSetPreExecHook;
virCommandSetWorkingDirectory;
virCommandToString;
virCommandTransferFD;
virCommandWait;
virCommandWriteArgLog;


# conf.h
virConfFree;
virConfFreeValue;
virConfGetValue;
virConfNew;
virConfReadFile;
virConfReadMem;
virConfSetValue;
virConfWriteFile;
virConfWriteMem;


# cpu.h
cpuBaseline;
cpuBaselineXML;
cpuCompare;
cpuCompareXML;
cpuDataFree;
cpuDecode;
cpuEncode;
cpuGuestData;
cpuHasFeature;
cpuMapOverride;
cpuNodeData;
cpuUpdate;


# cpu_conf.h
virCPUDefAddFeature;
virCPUDefCopy;
virCPUDefFormat;
virCPUDefFormatBuf;
virCPUDefFree;
virCPUDefParseXML;


# datatypes.h
virGetDomain;
virGetDomainSnapshot;
virGetInterface;
virGetNWFilter;
virGetNetwork;
virGetNodeDevice;
virGetSecret;
virGetStoragePool;
virGetStorageVol;
virGetStream;
virUnrefConnect;
virUnrefDomain;
virUnrefNWFilter;
virUnrefSecret;
virUnrefStorageVol;
virUnrefStream;


# dnsmasq.h
dnsmasqAddDhcpHost;
dnsmasqContextFree;
dnsmasqContextNew;
dnsmasqDelete;
dnsmasqReload;
dnsmasqSave;


# domain_conf.h
virDiskNameToBusDeviceIndex;
virDiskNameToIndex;
virDomainAssignDef;
virDomainChrConsoleTargetTypeFromString;
virDomainChrConsoleTargetTypeToString;
virDomainChrDefForeach;
virDomainChrDefFree;
virDomainChrSourceDefFree;
virDomainChrSpicevmcTypeFromString;
virDomainChrSpicevmcTypeToString;
virDomainChrTcpProtocolTypeFromString;
virDomainChrTcpProtocolTypeToString;
virDomainChrTypeFromString;
virDomainChrTypeToString;
virDomainClockOffsetTypeFromString;
virDomainClockOffsetTypeToString;
virDomainConfigFile;
virDomainControllerDefFree;
virDomainControllerInsert;
virDomainControllerInsertPreAlloced;
virDomainControllerModelTypeFromString;
virDomainControllerModelTypeToString;
virDomainControllerTypeToString;
virDomainCpuSetFormat;
virDomainCpuSetParse;
virDomainDefAddImplicitControllers;
virDomainDefClearDeviceAliases;
virDomainDefClearPCIAddresses;
virDomainDefFormat;
virDomainDefFree;
virDomainDefParseFile;
virDomainDefParseNode;
virDomainDefParseString;
virDomainDeleteConfig;
virDomainDeviceAddressIsValid;
virDomainDeviceAddressTypeToString;
virDomainDeviceDefFree;
virDomainDeviceDefParse;
virDomainDeviceInfoIsSet;
virDomainDeviceInfoIterate;
virDomainDevicePCIAddressIsValid;
virDomainDeviceTypeToString;
virDomainDiskBusTypeToString;
virDomainDiskCacheTypeFromString;
virDomainDiskCacheTypeToString;
virDomainDiskDefAssignAddress;
virDomainDiskDefForeachPath;
virDomainDiskDefFree;
virDomainDiskDeviceTypeToString;
virDomainDiskErrorPolicyTypeFromString;
virDomainDiskErrorPolicyTypeToString;
virDomainDiskInsert;
virDomainDiskInsertPreAlloced;
virDomainDiskIoTypeFromString;
virDomainDiskIoTypeToString;
virDomainDiskRemove;
virDomainDiskTypeFromString;
virDomainDiskTypeToString;
virDomainFSDefFree;
virDomainFindByID;
virDomainFindByName;
virDomainFindByUUID;
virDomainGetRootFilesystem;
virDomainGraphicsDefFree;
virDomainGraphicsSpiceChannelModeTypeFromString;
virDomainGraphicsSpiceChannelModeTypeToString;
virDomainGraphicsSpiceChannelNameTypeFromString;
virDomainGraphicsSpiceChannelNameTypeToString;
virDomainGraphicsTypeFromString;
virDomainGraphicsTypeToString;
virDomainHostdevDefFree;
virDomainHostdevModeTypeToString;
virDomainHostdevSubsysTypeToString;
virDomainInputDefFree;
virDomainLifecycleCrashTypeFromString;
virDomainLifecycleCrashTypeToString;
virDomainLifecycleTypeFromString;
virDomainLifecycleTypeToString;
virDomainLoadAllConfigs;
virDomainMemballoonModelTypeFromString;
virDomainMemballoonModelTypeToString;
virDomainNetDefFree;
virDomainNetTypeToString;
virDomainObjAssignDef;
virDomainObjSetDefTransient;
virDomainObjGetPersistentDef;
virDomainObjIsDuplicate;
virDomainObjListDeinit;
virDomainObjListGetActiveIDs;
virDomainObjListGetInactiveNames;
virDomainObjListInit;
virDomainObjListNumOfDomains;
virDomainObjLock;
virDomainObjRef;
virDomainObjUnlock;
virDomainObjUnref;
virDomainRemoveInactive;
virDomainSaveConfig;
virDomainSaveStatus;
virDomainSaveXML;
virDomainSmartcardDefForeach;
virDomainSmartcardDefFree;
virDomainSmartcardTypeFromString;
virDomainSmartcardTypeToString;
virDomainSnapshotAssignDef;
virDomainSnapshotDefFormat;
virDomainSnapshotDefFree;
virDomainSnapshotDefParseString;
virDomainSnapshotFindByName;
virDomainSnapshotHasChildren;
virDomainSnapshotObjListGetNames;
virDomainSnapshotObjListNum;
virDomainSnapshotObjListRemove;
virDomainSnapshotObjUnref;
virDomainSoundDefFree;
virDomainSoundModelTypeFromString;
virDomainSoundModelTypeToString;
virDomainStateTypeFromString;
virDomainStateTypeToString;
virDomainTimerModeTypeFromString;
virDomainTimerModeTypeToString;
virDomainTimerNameTypeFromString;
virDomainTimerNameTypeToString;
virDomainTimerTickpolicyTypeFromString;
virDomainTimerTickpolicyTypeToString;
virDomainTimerTrackTypeFromString;
virDomainTimerTrackTypeToString;
virDomainVideoDefFree;
virDomainVideoDefaultRAM;
virDomainVideoDefaultType;
virDomainVideoTypeFromString;
virDomainVideoTypeToString;
virDomainVirtTypeToString;
virDomainWatchdogActionTypeFromString;
virDomainWatchdogActionTypeToString;
virDomainWatchdogModelTypeFromString;
virDomainWatchdogModelTypeToString;


# domain_event.h
virDomainEventCallbackListAdd;
virDomainEventCallbackListAddID;
virDomainEventCallbackListCount;
virDomainEventCallbackListCountID;
virDomainEventCallbackListEventID;
virDomainEventCallbackListFree;
virDomainEventCallbackListMarkDelete;
virDomainEventCallbackListMarkDeleteID;
virDomainEventCallbackListPurgeMarked;
virDomainEventCallbackListRemove;
virDomainEventCallbackListRemoveConn;
virDomainEventCallbackListRemoveID;
virDomainEventDispatch;
virDomainEventDispatchDefaultFunc;
virDomainEventFree;
virDomainEventGraphicsNewFromDom;
virDomainEventGraphicsNewFromObj;
virDomainEventIOErrorNewFromDom;
virDomainEventIOErrorNewFromObj;
virDomainEventIOErrorReasonNewFromDom;
virDomainEventIOErrorReasonNewFromObj;
virDomainEventNew;
virDomainEventNewFromDef;
virDomainEventNewFromDom;
virDomainEventNewFromObj;
virDomainEventQueueDispatch;
virDomainEventQueueFree;
virDomainEventQueueNew;
virDomainEventQueuePop;
virDomainEventQueuePush;
virDomainEventRTCChangeNewFromDom;
virDomainEventRTCChangeNewFromObj;
virDomainEventRebootNewFromDom;
virDomainEventRebootNewFromObj;
virDomainEventWatchdogNewFromDom;
virDomainEventWatchdogNewFromObj;


# domain_nwfilter.h
virDomainConfNWFilterInstantiate;
virDomainConfNWFilterRegister;
virDomainConfNWFilterTeardown;
virDomainConfVMNWFilterTeardown;


# ebtables.h
ebtablesAddForwardAllowIn;
ebtablesAddForwardPolicyReject;
ebtablesContextFree;
ebtablesContextNew;
ebtablesRemoveForwardAllowIn;


# event.h
virEventAddHandle;
virEventAddTimeout;
virEventRemoveHandle;
virEventRemoveTimeout;
virEventUpdateHandle;
virEventUpdateTimeout;


# fdstream.h
virFDStreamOpen;
virFDStreamConnectUNIX;
virFDStreamOpenFile;
virFDStreamCreateFile;


# files.h
virClose;
virFclose;
virFdopen;


# hash.h
virHashAddEntry;
virHashCreate;
virHashForEach;
virHashFree;
virHashLookup;
virHashRemoveEntry;
virHashRemoveSet;
virHashSearch;
virHashSize;


# hooks.h
virHookCall;
virHookInitialize;
virHookPresent;


# interface.h
ifaceCheck;
ifaceCtrl;
ifaceGetFlags;
ifaceGetIndex;
ifaceGetVlanID;
ifaceIsUp;


# interface_conf.h
virInterfaceAssignDef;
virInterfaceDefFormat;
virInterfaceDefFree;
virInterfaceDefParseFile;
virInterfaceDefParseNode;
virInterfaceDefParseString;
virInterfaceFindByMACString;
virInterfaceFindByName;
virInterfaceObjListFree;
virInterfaceObjLock;
virInterfaceObjUnlock;
virInterfaceRemove;


# iptables.h
iptablesAddForwardAllowCross;
iptablesAddForwardAllowIn;
iptablesAddForwardAllowOut;
iptablesAddForwardAllowRelatedIn;
iptablesAddForwardMasquerade;
iptablesAddForwardRejectIn;
iptablesAddForwardRejectOut;
iptablesAddOutputFixUdpChecksum;
iptablesAddTcpInput;
iptablesAddUdpInput;
iptablesContextFree;
iptablesContextNew;
iptablesRemoveForwardAllowCross;
iptablesRemoveForwardAllowIn;
iptablesRemoveForwardAllowOut;
iptablesRemoveForwardAllowRelatedIn;
iptablesRemoveForwardMasquerade;
iptablesRemoveForwardRejectIn;
iptablesRemoveForwardRejectOut;
iptablesRemoveOutputFixUdpChecksum;
iptablesRemoveTcpInput;
iptablesRemoveUdpInput;


# json.h
virJSONValueArrayAppend;
virJSONValueArrayGet;
virJSONValueArraySize;
virJSONValueFree;
virJSONValueFromString;
virJSONValueGetBoolean;
virJSONValueGetNumberDouble;
virJSONValueGetNumberInt;
virJSONValueGetNumberLong;
virJSONValueGetNumberUint;
virJSONValueGetNumberUlong;
virJSONValueGetString;
virJSONValueIsNull;
virJSONValueNewArray;
virJSONValueNewBoolean;
virJSONValueNewNull;
virJSONValueNewNumberDouble;
virJSONValueNewNumberInt;
virJSONValueNewNumberLong;
virJSONValueNewNumberUint;
virJSONValueNewNumberUlong;
virJSONValueNewObject;
virJSONValueNewString;
virJSONValueNewStringLen;
virJSONValueObjectAppend;
virJSONValueObjectAppendBoolean;
virJSONValueObjectAppendNull;
virJSONValueObjectAppendNumberDouble;
virJSONValueObjectAppendNumberInt;
virJSONValueObjectAppendNumberLong;
virJSONValueObjectAppendNumberUint;
virJSONValueObjectAppendNumberUlong;
virJSONValueObjectAppendString;
virJSONValueObjectGet;
virJSONValueObjectGetBoolean;
virJSONValueObjectGetNumberDouble;
virJSONValueObjectGetNumberInt;
virJSONValueObjectGetNumberLong;
virJSONValueObjectGetNumberUint;
virJSONValueObjectGetNumberUlong;
virJSONValueObjectGetString;
virJSONValueObjectHasKey;
virJSONValueObjectIsNull;
virJSONValueToString;


# libvirt_internal.h
virDomainMigrateFinish2;
virDomainMigrateFinish;
virDomainMigratePerform;
virDomainMigratePrepare2;
virDomainMigratePrepare;
virDomainMigratePrepareTunnel;
virDrvSupportsFeature;
virRegisterDeviceMonitor;
virRegisterDriver;
virRegisterInterfaceDriver;
virRegisterNWFilterDriver;
virRegisterNetworkDriver;
virRegisterSecretDriver;
virRegisterStorageDriver;


# logging.h
virLogDefineFilter;
virLogDefineOutput;
virLogGetDefaultPriority;
virLogGetFilters;
virLogGetNbFilters;
virLogGetNbOutputs;
virLogGetOutputs;
virLogLock;
virLogMessage;
virLogParseDefaultPriority;
virLogParseFilters;
virLogParseOutputs;
virLogReset;
virLogSetDefaultPriority;
virLogSetFromEnv;
virLogShutdown;
virLogStartup;
virLogUnlock;


# macvtap.h
virVMOperationTypeFromString;
virVMOperationTypeToString;


# memory.h
virAlloc;
virAllocN;
virExpandN;
virFree;
virReallocN;
virResizeN;
virShrinkN;


# network.h
virSocketAddrBroadcast;
virSocketAddrBroadcastByPrefix;
virSocketAddrIsNetmask;
virSocketAddrMask;
virSocketAddrMaskByPrefix;
virSocketAddrPrefixToNetmask;
virSocketCheckNetmask;
virSocketFormatAddr;
virSocketFormatAddrFull;
virSocketGetPort;
virSocketGetRange;
virSocketParseAddr;
virSocketParseIpv4Addr;
virSocketParseIpv6Addr;
virSocketSetPort;


# network_conf.h
virNetworkAssignDef;
virNetworkConfigFile;
virNetworkDefFormat;
virNetworkDefFree;
virNetworkDefGetIpByIndex;
virNetworkDefParseFile;
virNetworkDefParseNode;
virNetworkDefParseString;
virNetworkDeleteConfig;
virNetworkFindByName;
virNetworkFindByUUID;
virNetworkIpDefNetmask;
virNetworkIpDefPrefix;
virNetworkLoadAllConfigs;
virNetworkObjIsDuplicate;
virNetworkObjListFree;
virNetworkObjLock;
virNetworkObjUnlock;
virNetworkRemoveInactive;
virNetworkSaveConfig;
virNetworkSetBridgeName;


# node_device_conf.h
virNodeDevCapTypeToString;
virNodeDevCapsDefFree;
virNodeDeviceAssignDef;
virNodeDeviceDefFormat;
virNodeDeviceDefFree;
virNodeDeviceDefParseFile;
virNodeDeviceDefParseNode;
virNodeDeviceDefParseString;
virNodeDeviceFindByName;
virNodeDeviceFindBySysfsPath;
virNodeDeviceGetParentHost;
virNodeDeviceGetWWNs;
virNodeDeviceHasCap;
virNodeDeviceObjListFree;
virNodeDeviceObjLock;
virNodeDeviceObjRemove;
virNodeDeviceObjUnlock;


# nodeinfo.h
nodeCapsInitNUMA;
nodeGetCellsFreeMemory;
nodeGetFreeMemory;
nodeGetInfo;


# nwfilter_conf.h
virNWFilterCallbackDriversLock;
virNWFilterCallbackDriversUnlock;
virNWFilterChainSuffixTypeToString;
virNWFilterConfLayerInit;
virNWFilterConfLayerShutdown;
virNWFilterDefFormat;
virNWFilterDefFree;
virNWFilterDefParseString;
virNWFilterJumpTargetTypeToString;
virNWFilterLoadAllConfigs;
virNWFilterLockFilterUpdates;
virNWFilterObjAssignDef;
virNWFilterObjDeleteDef;
virNWFilterObjFindByName;
virNWFilterObjFindByUUID;
virNWFilterObjListFree;
virNWFilterObjLock;
virNWFilterObjRemove;
virNWFilterObjSaveDef;
virNWFilterObjUnlock;
virNWFilterPrintStateMatchFlags;
virNWFilterRegisterCallbackDriver;
virNWFilterRuleActionTypeToString;
virNWFilterRuleProtocolTypeToString;
virNWFilterTestUnassignDef;
virNWFilterUnlockFilterUpdates;


# nwfilter_params.h
virNWFilterHashTableCreate;
virNWFilterHashTableFree;
virNWFilterHashTablePut;
virNWFilterHashTablePutAll;
virNWFilterHashTableRemoveEntry;


# pci.h
pciDettachDevice;
pciDeviceFileIterate;
pciDeviceGetManaged;
pciDeviceIsAssignable;
pciDeviceListAdd;
pciDeviceListCount;
pciDeviceListDel;
pciDeviceListFree;
pciDeviceListGet;
pciDeviceListNew;
pciDeviceListSteal;
pciDeviceSetManaged;
pciFreeDevice;
pciGetDevice;
pciReAttachDevice;
pciResetDevice;
pciWaitForDeviceCleanup;


# processinfo.h
virProcessInfoGetAffinity;
virProcessInfoSetAffinity;


# qparams.h
free_qparam_set;
qparam_get_query;
qparam_query_parse;


# secret_conf.h
virSecretDefFormat;
virSecretDefFree;
virSecretDefParseFile;
virSecretDefParseString;


# security_driver.h
virSecurityDriverLookup;


# security_manager.h
virSecurityManagerClearSocketLabel;
virSecurityManagerFree;
virSecurityManagerGenLabel;
virSecurityManagerGetDOI;
virSecurityManagerGetModel;
virSecurityManagerGetProcessLabel;
virSecurityManagerNew;
virSecurityManagerNewStack;
virSecurityManagerNewDAC;
virSecurityManagerReleaseLabel;
virSecurityManagerReserveLabel;
virSecurityManagerRestoreImageLabel;
virSecurityManagerRestoreAllLabel;
virSecurityManagerRestoreHostdevLabel;
virSecurityManagerRestoreSavedStateLabel;
virSecurityManagerSetAllLabel;
virSecurityManagerSetFDLabel;
virSecurityManagerSetImageLabel;
virSecurityManagerSetHostdevLabel;
virSecurityManagerSetProcessLabel;
virSecurityManagerSetSavedStateLabel;
virSecurityManagerSetSocketLabel;
virSecurityManagerVerify;


# storage_conf.h
virStoragePartedFsTypeTypeToString;
virStoragePoolDefFormat;
virStoragePoolDefFree;
virStoragePoolDefParseFile;
virStoragePoolDefParseNode;
virStoragePoolDefParseSourceString;
virStoragePoolDefParseString;
virStoragePoolFormatDiskTypeToString;
virStoragePoolFormatFileSystemNetTypeToString;
virStoragePoolFormatFileSystemTypeToString;
virStoragePoolLoadAllConfigs;
virStoragePoolObjAssignDef;
virStoragePoolObjClearVols;
virStoragePoolObjDeleteDef;
virStoragePoolObjFindByName;
virStoragePoolObjFindByUUID;
virStoragePoolObjIsDuplicate;
virStoragePoolObjListFree;
virStoragePoolObjLock;
virStoragePoolObjRemove;
virStoragePoolObjSaveDef;
virStoragePoolObjUnlock;
virStoragePoolSourceFree;
virStoragePoolSourceListFormat;
virStoragePoolSourceListNewSource;
virStoragePoolTypeFromString;
virStorageVolDefFindByKey;
virStorageVolDefFindByName;
virStorageVolDefFindByPath;
virStorageVolDefFormat;
virStorageVolDefFree;
virStorageVolDefParseFile;
virStorageVolDefParseNode;
virStorageVolDefParseString;


# storage_encryption_conf.h
virStorageEncryptionFormat;
virStorageEncryptionFree;
virStorageEncryptionParseNode;
virStorageGenerateQcowPassphrase;


# storage_file.h
virStorageFileFormatTypeFromString;
virStorageFileFormatTypeToString;
virStorageFileGetMetadata;
virStorageFileGetMetadataFromFD;
virStorageFileIsSharedFS;
virStorageFileIsSharedFSType;
virStorageFileProbeFormat;
virStorageFileProbeFormatFromFD;


# sysinfo.h
virSysinfoDefFree;
virSysinfoFormat;
virSysinfoRead;


# threadpool.h
virThreadPoolFree;
virThreadPoolNew;
virThreadPoolSendJob;


# threads.h
virCondBroadcast;
virCondDestroy;
virCondInit;
virCondSignal;
virCondWait;
virCondWaitUntil;
virMutexDestroy;
virMutexInit;
virMutexInitRecursive;
virMutexLock;
virMutexUnlock;
virThreadCreate;
virThreadID;
virThreadIsSelf;
virThreadJoin;
virThreadSelf;
virThreadSelfID;


# usb.h
usbDeviceFileIterate;
usbDeviceGetBus;
usbDeviceGetDevno;
usbFindDevice;
usbFreeDevice;
usbGetDevice;


# util.h
saferead;
safewrite;
safezero;
virArgvToString;
virAsprintf;
virBuildPathInternal;
virDirCreate;
virEnumFromString;
virEnumToString;
virEventAddHandle;
virEventRemoveHandle;
virExec;
virExecDaemonize;
virExecWithHook;
virFileAbsPath;
virFileDeletePid;
virFileExists;
virFileFindMountPoint;
virFileHasSuffix;
virFileIsExecutable;
virFileLinkPointsTo;
virFileMakePath;
virFileMatchesNameSuffix;
virFileOpenTty;
virFileOperation;
virFilePid;
virFileReadAll;
virFileReadLimFD;
virFileReadPid;
virFileResolveLink;
virFileSanitizePath;
virFileStripSuffix;
virFileWaitForDevices;
virFileWriteStr;
virFindFileInPath;
virFork;
virFormatMacAddr;
virGetGroupID;
virGetHostname;
virGetUserDirectory;
virGetUserID;
virGetUserName;
virHexToBin;
virIndexToDiskName;
virKillProcess;
virMacAddrCompare;
virParseMacAddr;
virParseNumber;
virParseVersionString;
virPipeReadUntilEOF;
virRandom;
virRandomInitialize;
virRun;
virRunWithHook;
virSetCloseExec;
virSetNonBlock;
virSetUIDGID;
virSkipSpaces;
virStrToDouble;
virStrToLong_i;
virStrToLong_l;
virStrToLong_ll;
virStrToLong_ui;
virStrToLong_ul;
virStrToLong_ull;
virStrcpy;
virStrncpy;
virTimestamp;
virVasprintf;


# uuid.h
virGetHostUUID;
virSetHostUUIDStr;
virUUIDFormat;
virUUIDGenerate;
virUUIDParse;


# virtaudit.h
virAuditClose;
virAuditEncode;
virAuditLog;
virAuditOpen;
virAuditSend;


# virterror_internal.h
virDispatchError;
virErrorMsg;
virRaiseErrorFull;
virReportErrorHelper;
virReportOOMErrorFull;
virReportSystemErrorFull;
virSetError;
virSetErrorLogPriorityFunc;
virStrerror;


# xml.h
virXMLPropString;
virXPathBoolean;
virXPathInt;
virXPathLong;
virXPathLongHex;
virXPathLongLong;
virXPathNode;
virXPathNodeSet;
virXPathNumber;
virXPathString;
virXPathStringLimit;
virXPathUInt;
virXPathULong;
virXPathULongHex;
virXPathULongLong;
#
# These symbols are dependent upon --with-qemu or --with-lxc via
# WITH_BRIDGE.
#


# bridge.h
brAddBridge;
brAddInetAddress;
brAddInterface;
brAddTap;
brDeleteTap;
brDeleteBridge;
brDelInetAddress;
brHasBridge;
brInit;
brSetEnableSTP;
brSetForwardDelay;
brSetInetNetmask;
brSetInterfaceUp;
brShutdown;
#
# Linux-specific private symbols.
#


# stats_linux.h
linuxDomainInterfaceStats;
xenLinuxDomainBlockStats;
#
# These symbols are dependent on WITH_MACVTAP.
#


# macvtap.h
delMacvtap;
openMacvtapTap;
vpAssociatePortProfileId;
vpDisassociatePortProfileId;
#
# These symbols are dependent upon --with-libvirtd via WITH_LIBVIRTD.
#

# libvirt_internal.h
virStateInitialize;
virStateCleanup;
virStateReload;
virStateActive;
virRegisterStateDriver;
#
# These symbols are dependent on WITH_NWFILTER.
#


# nwfilter_gentech_driver.h
virNWFilterInstantiateFilter;
virNWFilterTeardownFilter;


# nwfilter_learnipaddr.h
virNWFilterGetIpAddrForIfname;
virNWFilterDelIpAddrForIfname;
virNWFilterLookupLearnReq;
#
# These symbols are dependent upon --with-esx via WITH_ESX or --with-vmware via WITH_VMWARE.
#

# vmx.h
virVMXConvertToUTF8;
virVMXEscapeHex;
virVMXFormatCDROM;
virVMXFormatConfig;
virVMXFormatEthernet;
virVMXFormatFloppy;
virVMXFormatHardDisk;
virVMXFormatParallel;
virVMXFormatSerial;
virVMXFormatVNC;
virVMXParseConfig;
virVMXParseDisk;
virVMXParseEthernet;
virVMXParseParallel;
virVMXParseSCSIController;
virVMXParseSerial;
virVMXParseVNC;
virVMXUnescapeHex;


local:
*;

};