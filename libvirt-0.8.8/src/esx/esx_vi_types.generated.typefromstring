/* Generated by esx_vi_generator.py */

           else if (STREQ(type, "AutoStartWaitHeartbeatSetting")) {
               return esxVI_Type_AutoStartWaitHeartbeatSetting;
           }
           else if (STREQ(type, "ManagedEntityStatus")) {
               return esxVI_Type_ManagedEntityStatus;
           }
           else if (STREQ(type, "ObjectUpdateKind")) {
               return esxVI_Type_ObjectUpdateKind;
           }
           else if (STREQ(type, "PerfStatsType")) {
               return esxVI_Type_PerfStatsType;
           }
           else if (STREQ(type, "PerfSummaryType")) {
               return esxVI_Type_PerfSummaryType;
           }
           else if (STREQ(type, "PropertyChangeOp")) {
               return esxVI_Type_PropertyChangeOp;
           }
           else if (STREQ(type, "SharesLevel")) {
               return esxVI_Type_SharesLevel;
           }
           else if (STREQ(type, "TaskInfoState")) {
               return esxVI_Type_TaskInfoState;
           }
           else if (STREQ(type, "VirtualMachineMovePriority")) {
               return esxVI_Type_VirtualMachineMovePriority;
           }
           else if (STREQ(type, "VirtualMachinePowerState")) {
               return esxVI_Type_VirtualMachinePowerState;
           }

           else if (STREQ(type, "AboutInfo")) {
               return esxVI_Type_AboutInfo;
           }
           else if (STREQ(type, "AutoStartDefaults")) {
               return esxVI_Type_AutoStartDefaults;
           }
           else if (STREQ(type, "AutoStartPowerInfo")) {
               return esxVI_Type_AutoStartPowerInfo;
           }
           else if (STREQ(type, "ChoiceOption")) {
               return esxVI_Type_ChoiceOption;
           }
           else if (STREQ(type, "DatastoreHostMount")) {
               return esxVI_Type_DatastoreHostMount;
           }
           else if (STREQ(type, "DatastoreInfo")) {
               return esxVI_Type_DatastoreInfo;
           }
           else if (STREQ(type, "Description")) {
               return esxVI_Type_Description;
           }
           else if (STREQ(type, "DeviceBackedVirtualDiskSpec")) {
               return esxVI_Type_DeviceBackedVirtualDiskSpec;
           }
           else if (STREQ(type, "DynamicProperty")) {
               return esxVI_Type_DynamicProperty;
           }
           else if (STREQ(type, "ElementDescription")) {
               return esxVI_Type_ElementDescription;
           }
           else if (STREQ(type, "Event")) {
               return esxVI_Type_Event;
           }
           else if (STREQ(type, "FileBackedVirtualDiskSpec")) {
               return esxVI_Type_FileBackedVirtualDiskSpec;
           }
           else if (STREQ(type, "FileInfo")) {
               return esxVI_Type_FileInfo;
           }
           else if (STREQ(type, "FileQuery")) {
               return esxVI_Type_FileQuery;
           }
           else if (STREQ(type, "FileQueryFlags")) {
               return esxVI_Type_FileQueryFlags;
           }
           else if (STREQ(type, "FloppyImageFileInfo")) {
               return esxVI_Type_FloppyImageFileInfo;
           }
           else if (STREQ(type, "FloppyImageFileQuery")) {
               return esxVI_Type_FloppyImageFileQuery;
           }
           else if (STREQ(type, "FolderFileInfo")) {
               return esxVI_Type_FolderFileInfo;
           }
           else if (STREQ(type, "FolderFileQuery")) {
               return esxVI_Type_FolderFileQuery;
           }
           else if (STREQ(type, "HostAutoStartManagerConfig")) {
               return esxVI_Type_HostAutoStartManagerConfig;
           }
           else if (STREQ(type, "HostConfigManager")) {
               return esxVI_Type_HostConfigManager;
           }
           else if (STREQ(type, "HostCpuIdInfo")) {
               return esxVI_Type_HostCpuIdInfo;
           }
           else if (STREQ(type, "HostDatastoreBrowserSearchResults")) {
               return esxVI_Type_HostDatastoreBrowserSearchResults;
           }
           else if (STREQ(type, "HostDatastoreBrowserSearchSpec")) {
               return esxVI_Type_HostDatastoreBrowserSearchSpec;
           }
           else if (STREQ(type, "HostFileSystemVolume")) {
               return esxVI_Type_HostFileSystemVolume;
           }
           else if (STREQ(type, "HostMountInfo")) {
               return esxVI_Type_HostMountInfo;
           }
           else if (STREQ(type, "HostNasVolume")) {
               return esxVI_Type_HostNasVolume;
           }
           else if (STREQ(type, "HostScsiDiskPartition")) {
               return esxVI_Type_HostScsiDiskPartition;
           }
           else if (STREQ(type, "HostVmfsVolume")) {
               return esxVI_Type_HostVmfsVolume;
           }
           else if (STREQ(type, "IsoImageFileInfo")) {
               return esxVI_Type_IsoImageFileInfo;
           }
           else if (STREQ(type, "IsoImageFileQuery")) {
               return esxVI_Type_IsoImageFileQuery;
           }
           else if (STREQ(type, "LocalDatastoreInfo")) {
               return esxVI_Type_LocalDatastoreInfo;
           }
           else if (STREQ(type, "LocalizedMethodFault")) {
               return esxVI_Type_LocalizedMethodFault;
           }
           else if (STREQ(type, "NasDatastoreInfo")) {
               return esxVI_Type_NasDatastoreInfo;
           }
           else if (STREQ(type, "ObjectContent")) {
               return esxVI_Type_ObjectContent;
           }
           else if (STREQ(type, "ObjectSpec")) {
               return esxVI_Type_ObjectSpec;
           }
           else if (STREQ(type, "ObjectUpdate")) {
               return esxVI_Type_ObjectUpdate;
           }
           else if (STREQ(type, "OptionType")) {
               return esxVI_Type_OptionType;
           }
           else if (STREQ(type, "PerfCounterInfo")) {
               return esxVI_Type_PerfCounterInfo;
           }
           else if (STREQ(type, "PerfEntityMetric")) {
               return esxVI_Type_PerfEntityMetric;
           }
           else if (STREQ(type, "PerfEntityMetricBase")) {
               return esxVI_Type_PerfEntityMetricBase;
           }
           else if (STREQ(type, "PerfMetricId")) {
               return esxVI_Type_PerfMetricId;
           }
           else if (STREQ(type, "PerfMetricIntSeries")) {
               return esxVI_Type_PerfMetricIntSeries;
           }
           else if (STREQ(type, "PerfMetricSeries")) {
               return esxVI_Type_PerfMetricSeries;
           }
           else if (STREQ(type, "PerfQuerySpec")) {
               return esxVI_Type_PerfQuerySpec;
           }
           else if (STREQ(type, "PerfSampleInfo")) {
               return esxVI_Type_PerfSampleInfo;
           }
           else if (STREQ(type, "PropertyChange")) {
               return esxVI_Type_PropertyChange;
           }
           else if (STREQ(type, "PropertyFilterSpec")) {
               return esxVI_Type_PropertyFilterSpec;
           }
           else if (STREQ(type, "PropertyFilterUpdate")) {
               return esxVI_Type_PropertyFilterUpdate;
           }
           else if (STREQ(type, "PropertySpec")) {
               return esxVI_Type_PropertySpec;
           }
           else if (STREQ(type, "ResourceAllocationInfo")) {
               return esxVI_Type_ResourceAllocationInfo;
           }
           else if (STREQ(type, "ResourcePoolResourceUsage")) {
               return esxVI_Type_ResourcePoolResourceUsage;
           }
           else if (STREQ(type, "SelectionSpec")) {
               return esxVI_Type_SelectionSpec;
           }
           else if (STREQ(type, "ServiceContent")) {
               return esxVI_Type_ServiceContent;
           }
           else if (STREQ(type, "SharesInfo")) {
               return esxVI_Type_SharesInfo;
           }
           else if (STREQ(type, "TaskInfo")) {
               return esxVI_Type_TaskInfo;
           }
           else if (STREQ(type, "TemplateConfigFileInfo")) {
               return esxVI_Type_TemplateConfigFileInfo;
           }
           else if (STREQ(type, "TemplateConfigFileQuery")) {
               return esxVI_Type_TemplateConfigFileQuery;
           }
           else if (STREQ(type, "TraversalSpec")) {
               return esxVI_Type_TraversalSpec;
           }
           else if (STREQ(type, "UpdateSet")) {
               return esxVI_Type_UpdateSet;
           }
           else if (STREQ(type, "UserSession")) {
               return esxVI_Type_UserSession;
           }
           else if (STREQ(type, "VirtualDiskSpec")) {
               return esxVI_Type_VirtualDiskSpec;
           }
           else if (STREQ(type, "VirtualMachineConfigSpec")) {
               return esxVI_Type_VirtualMachineConfigSpec;
           }
           else if (STREQ(type, "VirtualMachineQuestionInfo")) {
               return esxVI_Type_VirtualMachineQuestionInfo;
           }
           else if (STREQ(type, "VirtualMachineSnapshotTree")) {
               return esxVI_Type_VirtualMachineSnapshotTree;
           }
           else if (STREQ(type, "VmConfigFileInfo")) {
               return esxVI_Type_VmConfigFileInfo;
           }
           else if (STREQ(type, "VmConfigFileQuery")) {
               return esxVI_Type_VmConfigFileQuery;
           }
           else if (STREQ(type, "VmConfigFileQueryFilter")) {
               return esxVI_Type_VmConfigFileQueryFilter;
           }
           else if (STREQ(type, "VmConfigFileQueryFlags")) {
               return esxVI_Type_VmConfigFileQueryFlags;
           }
           else if (STREQ(type, "VmDiskFileInfo")) {
               return esxVI_Type_VmDiskFileInfo;
           }
           else if (STREQ(type, "VmDiskFileQuery")) {
               return esxVI_Type_VmDiskFileQuery;
           }
           else if (STREQ(type, "VmDiskFileQueryFilter")) {
               return esxVI_Type_VmDiskFileQueryFilter;
           }
           else if (STREQ(type, "VmDiskFileQueryFlags")) {
               return esxVI_Type_VmDiskFileQueryFlags;
           }
           else if (STREQ(type, "VmLogFileInfo")) {
               return esxVI_Type_VmLogFileInfo;
           }
           else if (STREQ(type, "VmLogFileQuery")) {
               return esxVI_Type_VmLogFileQuery;
           }
           else if (STREQ(type, "VmNvramFileInfo")) {
               return esxVI_Type_VmNvramFileInfo;
           }
           else if (STREQ(type, "VmNvramFileQuery")) {
               return esxVI_Type_VmNvramFileQuery;
           }
           else if (STREQ(type, "VmSnapshotFileInfo")) {
               return esxVI_Type_VmSnapshotFileInfo;
           }
           else if (STREQ(type, "VmSnapshotFileQuery")) {
               return esxVI_Type_VmSnapshotFileQuery;
           }
           else if (STREQ(type, "VmfsDatastoreInfo")) {
               return esxVI_Type_VmfsDatastoreInfo;
           }
